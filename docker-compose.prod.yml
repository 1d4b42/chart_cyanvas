# $schema: https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

services:
  frontend:
    image: "ghcr.io/sevenc-nanashi/chart_cyanvas/frontend:latest"
    pull_policy: always
    volumes:
      - ./.env.prod:/app/.env

  backend:
    image: "ghcr.io/sevenc-nanashi/chart_cyanvas/backend:latest"
    pull_policy: always
    volumes:
      - ./.env.prod:/app/.env
      - ./rails_master.key:/app/config/master.key

  sub-audio:
    image: "ghcr.io/sevenc-nanashi/chart_cyanvas/sub-audio:latest"
    pull_policy: always
    restart: always
    volumes:
      - ./.env.prod:/app/.env

  sub-image:
    image: "ghcr.io/sevenc-nanashi/chart_cyanvas/sub-image:latest"
    pull_policy: always
    restart: always
    volumes:
      - ./.env.prod:/app/.env

  sub-sus:
    image: "ghcr.io/sevenc-nanashi/chart_cyanvas/sub-sus:latest"
    pull_policy: always
    restart: always
    volumes:
      - ./.env.prod:/app/.env

  redis:
    image: "redis:7.0.7-alpine"
    restart: always
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: "postgres:15.1-alpine"
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ${PG_DATABASE}

  nginx:
    image: "nginx:1.23.3-alpine"
    restart: always
    ports:
      - "$FINAL_PORT:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/public:/app/backend-public
