name: "[sub-audio] Lint, test"

on:
  push:
    paths:
      - "sub-audio/**"
      - ".github/workflows/sub-audio-*.yml"
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy .env
        run: cp .env.example .env

      - name: Setup ffmpeg
        run: |
          curl https://github.com/FedericoCarboni/setup-ffmpeg/releases/download/ffmpeg-4.4.1-20220101/ffmpeg-linux-x64.tar.gz -Lo ffmpeg.tar.gz
          tar -xzf ffmpeg.tar.gz -C ffmpeg
          echo "$(pwd)/ffmpeg" >> $GITHUB_PATH

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.3.1

      - name: Config poetry
        run: poetry config virtualenvs.create false

      - name: Cache packages
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('./sub-audio/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        working-directory: ./sub-audio
        run: poetry install --with dev,test

      - name: Run sub-image lint
        working-directory: ./sub-audio
        run: |
          poetry run poe lint

      - name: Run sub-image test
        working-directory: ./sub-audio
        run: |
          poetry run poe test

      - name: Dispatch build action
        if: github.ref_name == 'main'
        uses: codex-/return-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          owner: sevenc-nanashi
          repo: chart_cyanvas
          workflow: build.yml
          workflow_timeout_seconds: 120
          workflow_inputs: '{"directory_name": "sub-audio"}'
